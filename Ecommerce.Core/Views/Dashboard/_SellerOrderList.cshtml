@model Ecommerce.Repository.ViewModels.SellerOrderListViewModel
@using Ecommerce.Repository.ViewModels
@using Ecommerce.Repository.Models
@using static Ecommerce.Repository.Helpers.Enums

@if (Model.SellerOrders != null && Model.SellerOrders.Any())
{
    <div class=" container  d-flex bg-white border rounded-3 align-items-center flex-column">
        <div class="p-3 overflow-handler w-100">
            <table class="table table-striped border table-hover table-responsive">
                <thead>
                    <tr class="text-nowrap">
                        <th>ID</th>
                        <th>Customer Email</th>
                        <th>Delivery Address</th>
                        <th>Status</th>
                        <th>Product Name</th>
                        <th>Total Amount(with %)</th>
                        <th>Quantity</th>
                        <th>Available stocks</th>
                        <th>Order Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{int count = 1;}
                    @foreach (var order in Model.SellerOrders)
                    {
                        <tr class="">
                            <td>@count @{count++;}</td>
                            <td>@order.BuyerEmail</td>
                            <td class="address-class">@order.Address</td>
                            <td class="">
                                @if (order.OrderStatus == (int)OrderStatusEnum.Pending)
                                {
                                    <span class="badge p-2 bg-primary">Pending</span>
                                }
                                else if (order.OrderStatus == (int)OrderStatusEnum.Cancelled)
                                {
                                    <span class="badge p-2 bg-danger">Canceled</span>
                                }
                                else if (order.OrderStatus == (int)OrderStatusEnum.Delivered)
                                {
                                    <span class="badge p-2 bg-success">Delivered</span>
                                }
                                else
                                {
                                    <span class="badge p-2 bg-warning">Shipped</span>
                                }
                            </td>
                            <td>@order.ProductName</td>
                            <td>@order.Price.ToString("C")</td>
                            <td>@order.Quantity</td>
                            <td>@order.Stocks</td>
                            <td>@order.OrderDate.ToString("g")</td>

                            <td>
                                @if (order.OrderStatus != (int)OrderStatusEnum.Cancelled)
                                {

                                    <div class="d-flex flex-column gap-2">
                                        <button class="p-2 btn btn-primary PendingORderBtn" data-order-id="@order.OrderId">Pending
                                        </button>
                                        <button class="p-2 btn btn-warning ShippedOrderBtn" data-order-id="@order.OrderId">Shipped
                                        </button>
                                        <button class="p-2 btn btn-success DeliveredOrderBtn" data-order-id="@order.OrderId">Delivered
                                        </button>
                                    </div>

                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
                    
        </div>
    </div>
}
else
{
    <div class="alert alert-info text-center">
        <h3>No orders found</h3>
    </div>
}