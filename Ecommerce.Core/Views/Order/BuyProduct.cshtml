@model Ecommerce.Repository.ViewModels.OrderViewModel
@using Ecommerce.Repository.ViewModels;
@using Ecommerce.Repository.Models;
@using static Ecommerce.Repository.Helpers.Enums
@{
    Layout = "~/Views/Shared/_dashboard.cshtml";
}

<div class="d-flex container d-flex justify-content-between mt-4 ">
    <span class="fs-2 ">My Orders</span>
    <form action="DELETE" id="BackToDashBoardForm">
        <input type="hidden" name="SessionId" value="@Model.SessionId">
        <button type="submit" class="btn btn-primary ">Cancel</button>
    </form>
</div>

<div class="px-2 w-100 d-flex justify-content-center align-items-center">
    <div class="container p-3 m-3 d-flex bg-white border rounded-3 align-items-center flex-column ">
        
        <!-- order details -->
        <div class="d-flex w-100 flex-column flex-md-row">  
            <div class="w-100 mx-5 pe-4">
                <!-- details of product reciver-->
                <p class="fs-3 text-success fw-bold">User details</p>
                <p class="fs-5  text-nowrap">Name : @Model.FirstName @Model.LastName</p>
                <p class="fs-5 text-wrap pe-5">Address : @Model.Address, @Model.CityName, @Model.StateName, @Model.CountryName - @Model.PinCode</p>
                <p class="fs-5  text-nowrap">Phone : @Model.Phone</p>
            </div>
            <div class="d-flex align-items-end flex-column me-5">
                <!-- details of product Total sum-->
                <p class="fs-3 text-success fw-bold">Pricing details</p>
                <p class="fs-5 fw-normal text-nowrap">Total Price: @Model.objSession?.totalPrice.ToString("C")</p>
                <p class="fs-5 fw-normal text-nowrap">Total Discount: @Model.objSession?.totalDiscount.ToString("C")</p>
                <p class="fs-5 fw-normal text-nowrap">Total Quantity: @Model.objSession?.totalQuantity</p>
                <form action="POST" id="SingleOrderDetailsForm">
                    <input type="hidden" name="UserId" value="@Model.UserId">
                    <input type="hidden" name="SessionId" value="@Model.SessionId">
                    <button type="submit" class="btn btn-danger w-100">
                        Buy Now
                    </button>
                </form>
            </div>
        </div>

        <div class="w-100 d-flex justify-content-start ms-5 my-3">
            <span class="fs-3 ms-4 text-success fw-bold">Orders list</span>
        </div>
        @if (Model != null && Model.ordersList != null && Model.ordersList.Any())
        {
            foreach (productAtOrderViewModel product in Model.ordersList)
            {
                <div class="d-flex w-100 mb-3 border rounded-3">
                    <div class="productImageClass d-flex justify-content-center align-items-center  w-50 ">
                        <img class="imageClass" src="@Url.Content(product.Images?.ImageUrl)" alt="">
                    </div>
                    <div class="CartBody d-flex flex-column justify-content-center align-items-start  w-50">
                        <span class="fs-3 fw-normal  ">
                            @product.ProductName
                        </span>
                        <div class="mt-2">
                            @{
                                decimal price = 0;
                                decimal discount = 0;
                                int quantity = 0;
                                if (product.DiscountType == (int)DiscountEnum.FixedAmount)
                                {
                                    price = product.Price - product.Discount ?? 0;
                                    discount = product.Discount ?? 0;
                                    quantity = product.Quantity;
                                }
                                else if (product.DiscountType == (int)DiscountEnum.Percentage)
                                {
                                    price = product.Price - ((product.Price * product.Discount ?? 0) / 100);
                                    discount = (product.Price * product.Discount ?? 0) / 100;
                                    quantity = product.Quantity;
                                }
                                else
                                {
                                    price = product.Price;
                                    discount = 0;
                                    quantity = product.Quantity;
                                }

                                decimal discountOffer = 0;
                                if(product.Offer != null && product.Offer.ProductId > 0)
                                {
                                    switch (product.Offer.OfferType)
                                    {
                                        case (int)OfferTypeEnum.Percentage:
                                            discountOffer = (price * (product.Offer.DiscountRate ?? 0)) / 100;
                                            price = price - discountOffer;
                                            break;
                                        case (int)OfferTypeEnum.FixedPrice:
                                            discountOffer = (product.Offer.DiscountRate ?? 0);
                                            price = price - discountOffer;
                                            break;
                                        case (int)OfferTypeEnum.BOGO:
                                            quantity = product.Quantity * 2;
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                            <span class="display-6 fw-normal">@price.ToString("C")</span>
                            <span class="text-muted text-decoration-line-through text-nowrap">(@product.Price.ToString("C"))</span>
                            <br />
                            <span class="text-danger">
                                - @discount.ToString("c") @((int)DiscountEnum.FixedAmount == product.DiscountType ? "(Fixed)" : "(%)")
                            </span>
                        </div>

                        <div class="mt-3 d-flex gap-4 justify-content-center align-items-center">
                            <span class="fs-6 text-success ">
                                Quantity
                            </span>
                            <span class="d-flex gap-3 ">
                                <span class="text-secondary fs-5 quantity-text">@quantity</span>
                            </span>
                        </div>
                    </div>
                </div>
            }

            
        }
        else
        {
            <div class="d-flex justify-content-center align-items-center">
                <span class="display-6">
                    No orders found to place
                </span>
            </div>
        }
    </div>
</div>
@section scripts {  
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>  
        window.successMessage = '@TempData["SuccessMessage"]';
        window.errorMessage = '@TempData["ErrorMessage"]';

       
    </script>
    <script src="~/js/toastr_script.js"></script>
    <script src="~/js/buyProduct_script.js"></script>
}