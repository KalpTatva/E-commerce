@model Ecommerce.Repository.ViewModels.ProductsViewModel
@using Ecommerce.Repository.ViewModels;
@using Ecommerce.Repository.Models;
@using static Ecommerce.Repository.Helpers.Enums

@if (Model.productsDetails != null && Model.productsDetails.Any())
{
    @foreach (ProductsDeatailsViewModel p in Model.productsDetails)
    {
        <div class="card " data-product-id="@p.ProductId">

            @if (p.OfferAvailable)
            {
                <div class="offer d-flex justify-content-center align-items-center fs-4 text-white">
                    OFFER
                </div>

            }
            <div class="card-img" data-product-id="@p.ProductId">
                <img class="imageInCard" src="@Url.Content(p?.Images?.ImageUrl)" alt="">
            </div>
            <div class="card-body">
                <span class="h4">
                    @if (p.offer != null && p.offer.ProductId > 0)
                    {
                        <span class="bg-warning rounded-2 px-3">
                            @if (p.offer.OfferType == (int)OfferTypeEnum.Percentage)
                            {
                                <span class="text-danger">-@p.offer.DiscountRate %</span>
                            }
                            else if (p.offer.OfferType == (int)OfferTypeEnum.FixedPrice)
                            {
                                <span class="text-danger">- @((p.offer.DiscountRate ?? 0).ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-IN"))) Fixed Discount</span>
                            }
                            else if (p.offer.OfferType == (int)OfferTypeEnum.BOGO)
                            {
                                <span class="text-danger">Buy 1 Get 1 Free</span>
                            }
                        </span>
                    }
                    <br />
                    @p.ProductName
                </span>
                <div class="mt-2">
                    @{
                        decimal price = 0;
                        decimal discount = 0;
                        int quantity = 1;
                        if (p.DiscountType == (int)DiscountEnum.FixedAmount)
                        {
                            price = p.Price - p.Discount ?? 0;
                            discount = p.Discount ?? 0;
                        }
                        else if (p.DiscountType == (int)DiscountEnum.Percentage)
                        {
                            price = p.Price - ((p.Price * p.Discount ?? 0) / 100);
                            discount = (p.Price * p.Discount ?? 0) / 100;
                        }
                        else
                        {
                            price = p.Price;
                            discount = 0;
                        }

                        decimal discountOffer = 0;
                        if (p.offer != null && p.offer.ProductId > 0)
                        {
                            switch (p.offer.OfferType)
                            {
                                case (int)OfferTypeEnum.Percentage:
                                    discountOffer = (price * (p.offer.DiscountRate ?? 0)) / 100;
                                    price = price - discountOffer;
                                    break;
                                case (int)OfferTypeEnum.FixedPrice:
                                    discountOffer = (p.offer.DiscountRate ?? 0);
                                    price = price - discountOffer;
                                    break;
                                case (int)OfferTypeEnum.BOGO:
                                    quantity = 2;
                                    break;
                                default:
                                    break;
                            }
                        }
                    }
                    <span class="display-6 fw-normal">@price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-IN"))</span>
                    <span class="text-muted text-decoration-line-through text-nowrap">(@p.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-IN")))</span>
                    <br />
                    <span class="text-danger">
                        - @discount.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-IN")) @((int)DiscountEnum.FixedAmount == p.DiscountType ? "(Fixed)" : "(" +
                                        p.Discount + "%)")
            </span>
        </div>
        <div class="mt-2">
            <span class="text-success fs-5">Features </span>
            @if (p.Features != null && p.Features.Any())
                    {
                        string features = "";
                        foreach (Feature f in p.Features)
                        {
                            features += f.FeatureName + " " + f.Description + " | ";
                        }

                        features = features.Substring(0, features.Length - 2);
                        <span>
                            @features
                        </span>
                    }

                </div>

                <div class="d-flex justify-content-between gap-1 mt-2 w-100">
                    <div>
                        <span class="text-success fs-5">Reviews </span>
                        <span>
                            <span class="text-secondary fs-5 mb-2">
                                @if (p.AverageRatings > 0)
                                {
                                    int fullStars = (int)p.AverageRatings;
                                    decimal fractionalStar = p.AverageRatings - fullStars;

                                    for (int i = 0; i < fullStars; i++)
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }

                                    if (fractionalStar >= 0.5m)
                                    {
                                        <i class="bi bi-star-half text-warning"></i>
                                    }

                                    for (int i = fullStars + (fractionalStar >= 0.5m ? 1 : 0); i < 5; i++)
                                    {
                                        <i class="bi bi-star text-muted"></i>
                                    }
                                }
                                else
                                {
                                    <span class="text-muted">No rating</span>
                                }
                            </span>

                        </span>
                    </div>
                    <div>
                        @if (Model.BaseEmail != null)
                        {
                             <div class="addTofavourite" data-product-id="@p.ProductId"
                                data-is-favourite="@(Model.favourites != null && Model.favourites.Contains(p.ProductId) ? "true" : "false")">
                                @if (Model.favourites != null && Model.favourites.Contains(p.ProductId))
                                {
                                    <span><i class="bi bi-heart-fill icons-css text-danger fs-4"></i></span>
                                }
                                else
                                {
                                    <span><i class="bi bi-heart icons-css text-danger fs-4"></i></span>
                                }
                            </div>
                        }
                        

                    </div>
                </div>

                <div class="mt-2 gap-2 d-flex justify-content-end w-100">
                    @if (Model.BaseEmail != null && p.Stocks > 0)
                    {
                        <button class="btn btn-warning rounded-pill AddToCart " data-product-id="@p.ProductId">Add to cart</button>
                        <button class="btn btn-success rounded-pill BuySingleProduct" data-product-id="@p.ProductId"
                            data-price="@price" data-discount="@discount" data-quantity="@quantity">Buy now</button>
                    }
                    else
                    {
                        @if (Model.BaseEmail == null)
                        {
                            <span class="text-secondary fs-5">Please login to buy this product</span>
                        }
                        else
                        {
                            <span class="text-danger fs-5">Out of stock</span>
                        }
                    }



                </div>

            </div>
        </div>
    }
}
else
{
    <div class="d-flex justify-content-center align-items-center">
        <span class="display-5">
            No products found
        </span>
    </div>
}
